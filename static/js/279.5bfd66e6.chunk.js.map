{"version":3,"file":"static/js/279.5bfd66e6.chunk.js","mappings":"sNASQA,EAAiDC,EAAAA,EAAAA,eAAjCC,EAAiCD,EAAAA,EAAAA,aAAnBE,EAAmBF,EAAAA,EAAAA,eA4DzD,UA1DqB,WACnB,OAAqCG,EAAAA,EAAAA,GAAQC,EAAAA,EAAAA,aAA7C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAmC,OAAhBF,GAAwBA,EAE3CG,GAAUC,EAAAA,EAAAA,UACVC,GAAcD,EAAAA,EAAAA,UACdE,GAAaF,EAAAA,EAAAA,UACbG,GAAYH,EAAAA,EAAAA,UAElB,OACE,iCACE,gBAAKI,UAAU,gBAAgBC,KAAK,MAAMC,IAAI,yCAC9C,gBAAKF,UAAU,OAAOC,KAAK,MAAMC,IAAI,kBACrC,kBACEC,SAAU,SAACC,GAAD,OACRX,EACEW,EACAT,EAAQU,QAAQC,MAChBT,EAAYQ,QAAQC,MACpBR,EAAWO,QAAQC,MACnBP,EAAUM,QAAQC,QAGtBC,aAAa,MAVf,WAYE,iBAAKP,UAAU,aAAf,WACE,SAAC,IAAD,CAAaQ,IAAKb,EAASc,GAAG,OAAOC,KAAK,OAAOC,YAAY,OAAOC,UAAQ,KAC5E,kBAAOC,QAAQ,OAAf,sBAEF,iBAAKb,UAAU,aAAf,WACE,SAAC,IAAD,CAAaQ,IAAKX,EAAaY,GAAG,WAAWC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,KACzF,kBAAOC,QAAQ,OAAf,2BAEF,iBAAKb,UAAU,aAAf,WACE,SAAC,IAAD,CAAaQ,IAAKV,EAAYW,GAAG,UAAUC,KAAK,OAAOC,YAAY,UAAUC,UAAQ,KACrF,kBAAOC,QAAQ,UAAf,yBAEF,iBAAKb,UAAU,aAAf,WACE,SAAC,IAAD,CAAaQ,IAAKT,EAAWU,GAAG,SAASC,KAAK,OAAOC,YAAY,aAAaC,UAAQ,KACtF,kBAAOC,QAAQ,SAAf,+BAEF,gBAAKb,UAAU,cAAf,SACGN,IACC,UAAC,KAAD,YACE,iBAAMM,UAAU,OAAhB,6BACA,iBAAMA,UAAU,iBAAhB,UACE,SAAC,MAAD,cAMO,OAAhBR,EAAuBH,EAAiBG,EAAcJ,EAAeF","sources":["pages/CheckoutInfo.js"],"sourcesContent":["import { useRef } from 'react';\nimport { authActions } from '../features/authSlice';\nimport useForm from '../hooks/useForm';\n\nimport StyledInput from '../components/UI/Input.styled';\nimport { StyledUtilityBtn } from '../components/UI/Button.styled';\nimport { BiSend } from 'react-icons/bi';\nimport { messages } from '../components/shared/messages';\n\nconst { successMessage, errorMessage, initialMessage } = messages;\n\nconst CheckoutInfo = () => {\n  const [errorExists, submitHandler] = useForm(authActions.approveAuth);\n\n  const shouldSubmitShow = errorExists === null || errorExists;\n\n  const nameRef = useRef();\n  const lastNameRef = useRef();\n  const addressRef = useRef();\n  const streetRef = useRef();\n\n  return (\n    <>\n      <div className=\"img-container\" role=\"img\" alt=\"a mother and a child after shopping\" />\n      <div className=\"blob\" role=\"img\" alt=\"colored blob\" />\n      <form\n        onSubmit={(e) =>\n          submitHandler(\n            e,\n            nameRef.current.value,\n            lastNameRef.current.value,\n            addressRef.current.value,\n            streetRef.current.value\n          )\n        }\n        autoComplete=\"off\"\n      >\n        <div className=\"data-field\">\n          <StyledInput ref={nameRef} id=\"name\" type=\"text\" placeholder=\"Name\" required />\n          <label htmlFor=\"name\">Name</label>\n        </div>\n        <div className=\"data-field\">\n          <StyledInput ref={lastNameRef} id=\"lastname\" type=\"text\" placeholder=\"Last Name\" required />\n          <label htmlFor=\"name\">Last Name</label>\n        </div>\n        <div className=\"data-field\">\n          <StyledInput ref={addressRef} id=\"address\" type=\"text\" placeholder=\"Address\" required />\n          <label htmlFor=\"address\">Address</label>\n        </div>\n        <div className=\"data-field\">\n          <StyledInput ref={streetRef} id=\"street\" type=\"text\" placeholder=\"Street No.\" required />\n          <label htmlFor=\"street\">Street Number</label>\n        </div>\n        <div className=\"form-action\">\n          {shouldSubmitShow && (\n            <StyledUtilityBtn>\n              <span className=\"text\">Submit details</span>\n              <span className=\"icon smallIcon\">\n                <BiSend />\n              </span>\n            </StyledUtilityBtn>\n          )}\n        </div>\n      </form>\n      {errorExists === null ? initialMessage : errorExists ? errorMessage : successMessage}\n    </>\n  );\n};\n\nexport default CheckoutInfo;\n"],"names":["successMessage","messages","errorMessage","initialMessage","useForm","authActions","errorExists","submitHandler","shouldSubmitShow","nameRef","useRef","lastNameRef","addressRef","streetRef","className","role","alt","onSubmit","e","current","value","autoComplete","ref","id","type","placeholder","required","htmlFor"],"sourceRoot":""}